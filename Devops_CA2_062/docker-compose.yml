version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: recruitment-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - recruitment-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recruitment-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/recruitment_platform
      - JWT_SECRET=${JWT_SECRET:-dev_secret}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - JUDGE0_API_KEY=${JUDGE0_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PORT=5000
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - recruitment-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: recruitment-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - recruitment-net

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: recruitment-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - recruitment-net

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: recruitment-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - recruitment-net

networks:
  recruitment-net:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local